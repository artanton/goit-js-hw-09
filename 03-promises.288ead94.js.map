{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACeC,SAASC,cAAc,0BAAtC,MACMC,EAAOF,SAASC,cAAc,SACpC,IAAIE,EAAW,GAWf,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAlBbJ,EAAKW,iBAAiB,SAEtB,SAAqBC,GACnB,MAAMC,EAAQD,EAAEE,OACZD,EAAME,aAAa,UACrBd,EAASY,EAAMG,aAAa,SAAWC,SAASJ,EAAMK,MAAO,I,IAiBjElB,EAAKW,iBAAiB,UAEtB,SAAkBQ,GAChBA,EAAIC,iBACJC,QAAQC,IAAIrB,GACZ,IAAIsB,EAAQtB,EAASG,MACjBoB,EAAOvB,EAASuB,KAChBC,EAASxB,EAASwB,OAClBC,EAAW,EAEf,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAQE,IAC1BD,EAAWC,EAEXzB,EAAcwB,EAAUH,GACrBK,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjByB,EAAAjC,GAASkC,OAAOC,QACd,uBAAqB5B,QAAiBC,MAAU,IAGnD4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClByB,EAAAjC,GAASkC,OAAOG,QACd,sBAAoB9B,QAAeC,MAAU,IAGnDmB,GAASC,EACTxB,EAAKkC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst submit = document.querySelector('button[type=\"submit\"] ');\nconst form = document.querySelector('.form');\nlet formData = {};\n\nform.addEventListener('input', dataCrawler);\n\nfunction dataCrawler(e) {\n  const input = e.target;\n  if (input.hasAttribute('name')) {\n    formData[input.getAttribute('name')] = parseInt(input.value, 10);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  console.log(formData);\n  let delay = formData.delay;\n  let step = formData.step;\n  let amount = formData.amount;\n  let position = 0;\n\n  for (let i = 0; i < amount; i++) {\n    position = i;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n    form.reset();\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","document","querySelector","$47d4ff9957288465$var$form","$47d4ff9957288465$var$formData","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","input","target","hasAttribute","getAttribute","parseInt","value","evt","preventDefault","console","log","delay1","step","amount","position1","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.288ead94.js.map"}